
package net.jforum.dao.generic;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import net.jforum.JForumExecutionContext;
import net.jforum.dao.CategoryDAO;
import net.jforum.entities.Category;
import net.jforum.exceptions.DatabaseException;
import net.jforum.util.DbUtils;
import net.jforum.util.preferences.SystemGlobals;

public class GenericCategoryDAO extends AutoKeys implements CategoryDAO {

	public Category selectById(int categoryId) {
		PreparedStatement p = null;
		ResultSet rs = null;
		try {
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.selectById"));
			p.setInt(1, categoryId);
			rs = p.executeQuery();
			Category c = new Category();
			if (rs.next()) {
				c = this.getCategory(rs);
			}
			return c;
		} catch (SQLException e) {
			throw new DatabaseException(e);
		} finally {
			DbUtils.close(rs, p);
		}
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public List selectAll() {
		System.out.println("--> [GenericCategoryDAO.selectAll] ...... ");
		PreparedStatement p = null;
		ResultSet rs = null;
		try {
			System.out.println("INFOR: Call the SQL Query CategoryModel.selectAll ...");
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.selectAll"));
			List l = new ArrayList();
			rs = p.executeQuery();
			while (rs.next()) {
				l.add(getCategory(rs));
			}
			System.out.println("DEBUG: Number of Category in Current Forum = " + l.size());
			return l;
		} catch (SQLException e) {
			throw new DatabaseException(e);
		} finally {
			DbUtils.close(rs, p);
		}
	}

	protected Category getCategory(ResultSet rs) throws SQLException {
		Category c = new Category();
		c.setId(rs.getInt("categories_id"));
		c.setName(rs.getString("title"));
		c.setOrder(rs.getInt("display_order"));
		c.setModerated(rs.getInt("moderated") == 1);
		return c;
	}

	public boolean canDelete(int categoryId) {
		PreparedStatement p = null;
		ResultSet rs = null;
		try {
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.canDelete"));
			p.setInt(1, categoryId);
			rs = p.executeQuery();
			return !rs.next() || rs.getInt("total") < 1;
		} catch (SQLException e) {
			throw new DatabaseException(e);
		} finally {
			DbUtils.close(rs, p);
		}
	}

	public void delete(int categoryId) {
		PreparedStatement p = null;
		try {
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.delete"));
			p.setInt(1, categoryId);
			p.executeUpdate();
		} catch (SQLException e) {
			throw new DatabaseException(e);
		} finally {
			DbUtils.close(p);
		}
	}

	public void update(Category category) {
		PreparedStatement p = null;
		try {
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.update"));
			p.setString(1, category.getName());
			p.setInt(2, category.isModerated() ? 1 : 0);
			p.setInt(3, category.getId());
			p.executeUpdate();
		} catch (SQLException e) {
			throw new DatabaseException(e);
		} finally {
			DbUtils.close(p);
		}
	}

	public int addNew(Category category) {
		int order = 1;
		ResultSet rs = null;
		PreparedStatement p = null;
		try {
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.getMaxOrder"));
			rs = p.executeQuery();
			if (rs.next()) {
				order = rs.getInt(1) + 1;
			}
			rs.close();
			rs = null;
			p.close();
			p = null;
			p = getStatementForAutoKeys("CategoryModel.addNew");
			p.setString(1, category.getName());
			p.setInt(2, order);
			p.setInt(3, category.isModerated() ? 1 : 0);
			setAutoGeneratedKeysQuery(SystemGlobals.getSql("CategoryModel.lastGeneratedCategoryId"));
			int id = executeAutoKeysQuery(p);
			category.setId(id);
			category.setOrder(order);
			return id;
		} catch (SQLException e) {
			throw new DatabaseException(e);
		} finally {
			DbUtils.close(rs, p);
		}
	}

	public void setOrderUp(Category category, Category relatedCategory) {
		setOrder(category, relatedCategory);
	}

	public void setOrderDown(Category category, Category relatedCategory) {
		setOrder(category, relatedCategory);
	}

	private void setOrder(Category category, Category otherCategory) {
		int tmpOrder = otherCategory.getOrder();
		otherCategory.setOrder(category.getOrder());
		category.setOrder(tmpOrder);
		PreparedStatement p = null;
		try {
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.setOrderById"));
			p.setInt(1, otherCategory.getOrder());
			p.setInt(2, otherCategory.getId());
			p.executeUpdate();
			p.close();
			p = null;
			p = JForumExecutionContext.getConnection().prepareStatement(SystemGlobals.getSql("CategoryModel.setOrderById"));
			p.setInt(1, category.getOrder());
			p.setInt(2, category.getId());
			p.executeUpdate();
		} catch (SQLException e) {
			throw new DatabaseException(e);
		} finally {
			DbUtils.close(p);
		}
	}
}
