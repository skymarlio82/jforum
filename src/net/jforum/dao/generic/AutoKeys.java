
package net.jforum.dao.generic;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import net.jforum.JForumExecutionContext;
import net.jforum.util.DbUtils;
import net.jforum.util.preferences.ConfigKeys;
import net.jforum.util.preferences.SystemGlobals;

public class AutoKeys {

	private String autoGeneratedKeysQuery = null;

	protected boolean supportAutoGeneratedKeys() {
		return SystemGlobals.getBoolValue(ConfigKeys.DATABASE_AUTO_KEYS);
	}

	protected void setAutoGeneratedKeysQuery(String query) {
		this.autoGeneratedKeysQuery = query;
	}

	protected String getAutoGeneratedKeysQuery() {
		return autoGeneratedKeysQuery;
	}

	protected String getErrorMessage() {
		return "Could not obtain the latest generated key. This error may be associated to some invalid database driver operation or server failure. Please check the database configurations and code logic.";
	}

	protected PreparedStatement getStatementForAutoKeys(String queryName, Connection conn) throws SQLException {
		return supportAutoGeneratedKeys() ? conn.prepareStatement(SystemGlobals.getSql(queryName), Statement.RETURN_GENERATED_KEYS) : conn.prepareStatement(SystemGlobals.getSql(queryName));
	}

	protected PreparedStatement getStatementForAutoKeys(String queryName) throws SQLException {
		return getStatementForAutoKeys(queryName, JForumExecutionContext.getConnection());
	}

	protected int executeAutoKeysQuery(PreparedStatement p) throws SQLException {
		return executeAutoKeysQuery(p, JForumExecutionContext.getConnection());
	}

	protected int executeAutoKeysQuery(PreparedStatement p, Connection conn) throws SQLException {
		int id = -1;
		p.executeUpdate();
		ResultSet rs = null;
		try {
			if (supportAutoGeneratedKeys()) {
				rs = p.getGeneratedKeys();
				if (rs.next()) {
					id = rs.getInt(1);
				}
			} else {
				p = conn.prepareStatement(getAutoGeneratedKeysQuery());
				rs = p.executeQuery();
				if (rs.next()) {
					id = rs.getInt(1);
				}
			}
		} finally {
			DbUtils.close(rs);
		}
		if (id == -1) {
			throw new SQLException(getErrorMessage());
		}
		return id;
	}
}
